{"ast":null,"code":"import React, { useRef, useEffect, useState } from 'react';\nimport ReactDom from 'react-dom';\nimport cx from 'classnames';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport useForwardedRef from '@bedrock-layout/use-forwarded-ref';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar CloseIcon = function CloseIcon(_ref) {\n  var classes = _ref.classes,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    id = _ref.id,\n    closeIcon = _ref.closeIcon,\n    onClick = _ref.onClick;\n  return React.createElement(\"button\", {\n    id: id,\n    className: cx(classes.closeButton, classNames == null ? void 0 : classNames.closeButton),\n    style: styles == null ? void 0 : styles.closeButton,\n    onClick: onClick,\n    \"data-testid\": \"close-button\"\n  }, closeIcon ? closeIcon : React.createElement(\"svg\", {\n    className: classNames == null ? void 0 : classNames.closeIcon,\n    style: styles == null ? void 0 : styles.closeIcon,\n    width: 28,\n    height: 28,\n    viewBox: \"0 0 36 36\",\n    \"data-testid\": \"close-icon\"\n  }, React.createElement(\"path\", {\n    d: \"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\"\n  })));\n};\nvar isBrowser = typeof window !== 'undefined';\n\n// https://github.com/alexandrzavalii/focus-trap-js/blob/master/src/index.js v1.1.0\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];\nfunction isHidden(node) {\n  // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,\n  // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.\n  return node.offsetParent === null || getComputedStyle(node).visibility === 'hidden';\n}\nfunction getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n}\nfunction isNotRadioOrTabbableRadio(node) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio' || !node.name) {\n    return true;\n  }\n  var radioScope = node.form || node.ownerDocument;\n  var radioSet = radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + node.name + '\"]');\n  var checked = getCheckedRadio(radioSet, node.form);\n  return checked === node || checked === undefined && radioSet[0] === node;\n}\nfunction getAllTabbingElements(parentElem) {\n  var currentActiveElement = document.activeElement;\n  var tabbableNodes = parentElem.querySelectorAll(candidateSelectors.join(','));\n  var onlyTabbable = [];\n  for (var i = 0; i < tabbableNodes.length; i++) {\n    var node = tabbableNodes[i];\n    if (currentActiveElement === node || !node.disabled && getTabindex(node) > -1 && !isHidden(node) && isNotRadioOrTabbableRadio(node)) {\n      onlyTabbable.push(node);\n    }\n  }\n  return onlyTabbable;\n}\nfunction tabTrappingKey(event, parentElem) {\n  // check if current event keyCode is tab\n  if (!event || event.key !== 'Tab') return;\n  if (!parentElem || !parentElem.contains) {\n    if (process && process.env.NODE_ENV === 'development') {\n      console.warn('focus-trap-js: parent element is not defined');\n    }\n    return false;\n  }\n  if (!parentElem.contains(event.target)) {\n    return false;\n  }\n  var allTabbingElements = getAllTabbingElements(parentElem);\n  var firstFocusableElement = allTabbingElements[0];\n  var lastFocusableElement = allTabbingElements[allTabbingElements.length - 1];\n  if (event.shiftKey && event.target === firstFocusableElement) {\n    lastFocusableElement.focus();\n    event.preventDefault();\n    return true;\n  } else if (!event.shiftKey && event.target === lastFocusableElement) {\n    firstFocusableElement.focus();\n    event.preventDefault();\n    return true;\n  }\n  return false;\n}\nfunction getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n  if (!isNaN(tabindexAttr)) return tabindexAttr; // Browsers do not return tabIndex correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\nfunction isContentEditable(node) {\n  return node.getAttribute('contentEditable');\n}\nvar FocusTrap = function FocusTrap(_ref) {\n  var container = _ref.container,\n    initialFocusRef = _ref.initialFocusRef;\n  var refLastFocus = useRef();\n  /**\r\n   * Handle focus lock on the modal\r\n   */\n\n  useEffect(function () {\n    var handleKeyEvent = function handleKeyEvent(event) {\n      if (container == null ? void 0 : container.current) {\n        tabTrappingKey(event, container.current);\n      }\n    };\n    if (isBrowser) {\n      document.addEventListener('keydown', handleKeyEvent);\n    } // On mount we focus on the first focusable element in the modal if there is one\n\n    if (isBrowser && (container == null ? void 0 : container.current)) {\n      var savePreviousFocus = function savePreviousFocus() {\n        // First we save the last focused element\n        // only if it's a focusable element\n        if (candidateSelectors.findIndex(function (selector) {\n          var _document$activeEleme;\n          return (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.matches(selector);\n        }) !== -1) {\n          refLastFocus.current = document.activeElement;\n        }\n      };\n      if (initialFocusRef) {\n        savePreviousFocus(); // We need to schedule focusing on a next frame - this allows to focus on the modal root\n\n        requestAnimationFrame(function () {\n          var _initialFocusRef$curr;\n          (_initialFocusRef$curr = initialFocusRef.current) == null ? void 0 : _initialFocusRef$curr.focus();\n        });\n      } else {\n        var allTabbingElements = getAllTabbingElements(container.current);\n        if (allTabbingElements[0]) {\n          savePreviousFocus();\n          allTabbingElements[0].focus();\n        }\n      }\n    }\n    return function () {\n      if (isBrowser) {\n        var _refLastFocus$current;\n        document.removeEventListener('keydown', handleKeyEvent); // On unmount we restore the focus to the last focused element\n\n        (_refLastFocus$current = refLastFocus.current) == null ? void 0 : _refLastFocus$current.focus();\n      }\n    };\n  }, [container, initialFocusRef]);\n  return null;\n};\nvar modals = [];\n/**\r\n * Handle the order of the modals.\r\n * Inspired by the material-ui implementation.\r\n */\n\nvar modalManager = {\n  /**\r\n   * Register a new modal\r\n   */\n  add: function add(newModal) {\n    modals.push(newModal);\n  },\n  /**\r\n   * Remove a modal\r\n   */\n  remove: function remove(oldModal) {\n    modals = modals.filter(function (modal) {\n      return modal !== oldModal;\n    });\n  },\n  /**\r\n   * When multiple modals are rendered will return true if current modal is the last one\r\n   */\n  isTopModal: function isTopModal(modal) {\n    return !!modals.length && modals[modals.length - 1] === modal;\n  }\n};\nfunction useModalManager(ref, open) {\n  useEffect(function () {\n    if (open) {\n      modalManager.add(ref);\n    }\n    return function () {\n      modalManager.remove(ref);\n    };\n  }, [open, ref]);\n}\nvar useScrollLock = function useScrollLock(refModal, open, showPortal, blockScroll, reserveScrollBarGap) {\n  var oldRef = useRef(null);\n  useEffect(function () {\n    if (open && refModal.current && blockScroll) {\n      oldRef.current = refModal.current;\n      disableBodyScroll(refModal.current, {\n        reserveScrollBarGap: reserveScrollBarGap\n      });\n    }\n    return function () {\n      if (oldRef.current) {\n        enableBodyScroll(oldRef.current);\n        oldRef.current = null;\n      }\n    };\n  }, [open, showPortal, refModal, blockScroll, reserveScrollBarGap]);\n};\nvar classes = {\n  root: 'react-responsive-modal-root',\n  overlay: 'react-responsive-modal-overlay',\n  overlayAnimationIn: 'react-responsive-modal-overlay-in',\n  overlayAnimationOut: 'react-responsive-modal-overlay-out',\n  modalContainer: 'react-responsive-modal-container',\n  modalContainerCenter: 'react-responsive-modal-containerCenter',\n  modal: 'react-responsive-modal-modal',\n  modalAnimationIn: 'react-responsive-modal-modal-in',\n  modalAnimationOut: 'react-responsive-modal-modal-out',\n  closeButton: 'react-responsive-modal-closeButton'\n};\nvar Modal = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _classNames$overlayAn, _classNames$overlayAn2, _classNames$modalAnim, _classNames$modalAnim2;\n  var open = _ref.open,\n    center = _ref.center,\n    _ref$blockScroll = _ref.blockScroll,\n    blockScroll = _ref$blockScroll === void 0 ? true : _ref$blockScroll,\n    _ref$closeOnEsc = _ref.closeOnEsc,\n    closeOnEsc = _ref$closeOnEsc === void 0 ? true : _ref$closeOnEsc,\n    _ref$closeOnOverlayCl = _ref.closeOnOverlayClick,\n    closeOnOverlayClick = _ref$closeOnOverlayCl === void 0 ? true : _ref$closeOnOverlayCl,\n    container = _ref.container,\n    _ref$showCloseIcon = _ref.showCloseIcon,\n    showCloseIcon = _ref$showCloseIcon === void 0 ? true : _ref$showCloseIcon,\n    closeIconId = _ref.closeIconId,\n    closeIcon = _ref.closeIcon,\n    _ref$focusTrapped = _ref.focusTrapped,\n    focusTrapped = _ref$focusTrapped === void 0 ? true : _ref$focusTrapped,\n    _ref$initialFocusRef = _ref.initialFocusRef,\n    initialFocusRef = _ref$initialFocusRef === void 0 ? undefined : _ref$initialFocusRef,\n    _ref$animationDuratio = _ref.animationDuration,\n    animationDuration = _ref$animationDuratio === void 0 ? 300 : _ref$animationDuratio,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    _ref$role = _ref.role,\n    role = _ref$role === void 0 ? 'dialog' : _ref$role,\n    ariaDescribedby = _ref.ariaDescribedby,\n    ariaLabelledby = _ref.ariaLabelledby,\n    containerId = _ref.containerId,\n    modalId = _ref.modalId,\n    onClose = _ref.onClose,\n    onEscKeyDown = _ref.onEscKeyDown,\n    onOverlayClick = _ref.onOverlayClick,\n    onAnimationEnd = _ref.onAnimationEnd,\n    children = _ref.children,\n    reserveScrollBarGap = _ref.reserveScrollBarGap;\n  var refDialog = useForwardedRef(ref);\n  var refModal = useRef(null);\n  var refShouldClose = useRef(null);\n  var refContainer = useRef(null); // Lazily create the ref instance\n  // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n\n  if (refContainer.current === null && isBrowser) {\n    refContainer.current = document.createElement('div');\n  } // The value should be false for srr, that way when the component is hydrated client side,\n  // it will match the server rendered content\n\n  var _useState = useState(false),\n    showPortal = _useState[0],\n    setShowPortal = _useState[1]; // Hook used to manage multiple modals opened at the same time\n\n  useModalManager(refModal, open); // Hook used to manage the scroll\n\n  useScrollLock(refModal, open, showPortal, blockScroll, reserveScrollBarGap);\n  var handleOpen = function handleOpen() {\n    if (refContainer.current && !container && !document.body.contains(refContainer.current)) {\n      document.body.appendChild(refContainer.current);\n    }\n    document.addEventListener('keydown', handleKeydown);\n  };\n  var handleClose = function handleClose() {\n    if (refContainer.current && !container && document.body.contains(refContainer.current)) {\n      document.body.removeChild(refContainer.current);\n    }\n    document.removeEventListener('keydown', handleKeydown);\n  };\n  var handleKeydown = function handleKeydown(event) {\n    // Only the last modal need to be escaped when pressing the esc key\n    if (event.keyCode !== 27 || !modalManager.isTopModal(refModal)) {\n      return;\n    }\n    onEscKeyDown == null ? void 0 : onEscKeyDown(event);\n    if (closeOnEsc) {\n      onClose();\n    }\n  };\n  useEffect(function () {\n    return function () {\n      if (showPortal) {\n        // When the modal is closed or removed directly, cleanup the listeners\n        handleClose();\n      }\n    };\n  }, [showPortal]);\n  useEffect(function () {\n    // If the open prop is changing, we need to open the modal\n    // This is also called on the first render if the open prop is true when the modal is created\n    if (open && !showPortal) {\n      setShowPortal(true);\n      handleOpen();\n    }\n  }, [open]);\n  var handleClickOverlay = function handleClickOverlay(event) {\n    if (refShouldClose.current === null) {\n      refShouldClose.current = true;\n    }\n    if (!refShouldClose.current) {\n      refShouldClose.current = null;\n      return;\n    }\n    onOverlayClick == null ? void 0 : onOverlayClick(event);\n    if (closeOnOverlayClick) {\n      onClose();\n    }\n    refShouldClose.current = null;\n  };\n  var handleModalEvent = function handleModalEvent() {\n    refShouldClose.current = false;\n  };\n  var handleAnimationEnd = function handleAnimationEnd() {\n    if (!open) {\n      setShowPortal(false);\n    }\n    onAnimationEnd == null ? void 0 : onAnimationEnd();\n  };\n  var containerModal = container || refContainer.current;\n  var overlayAnimation = open ? (_classNames$overlayAn = classNames == null ? void 0 : classNames.overlayAnimationIn) != null ? _classNames$overlayAn : classes.overlayAnimationIn : (_classNames$overlayAn2 = classNames == null ? void 0 : classNames.overlayAnimationOut) != null ? _classNames$overlayAn2 : classes.overlayAnimationOut;\n  var modalAnimation = open ? (_classNames$modalAnim = classNames == null ? void 0 : classNames.modalAnimationIn) != null ? _classNames$modalAnim : classes.modalAnimationIn : (_classNames$modalAnim2 = classNames == null ? void 0 : classNames.modalAnimationOut) != null ? _classNames$modalAnim2 : classes.modalAnimationOut;\n  return showPortal && containerModal ? ReactDom.createPortal(React.createElement(\"div\", {\n    className: cx(classes.root, classNames == null ? void 0 : classNames.root),\n    style: styles == null ? void 0 : styles.root,\n    \"data-testid\": \"root\"\n  }, React.createElement(\"div\", {\n    className: cx(classes.overlay, classNames == null ? void 0 : classNames.overlay),\n    \"data-testid\": \"overlay\",\n    \"aria-hidden\": true,\n    style: _extends({\n      animation: overlayAnimation + \" \" + animationDuration + \"ms\"\n    }, styles == null ? void 0 : styles.overlay)\n  }), React.createElement(\"div\", {\n    ref: refModal,\n    id: containerId,\n    className: cx(classes.modalContainer, center && classes.modalContainerCenter, classNames == null ? void 0 : classNames.modalContainer),\n    style: styles == null ? void 0 : styles.modalContainer,\n    \"data-testid\": \"modal-container\",\n    onClick: handleClickOverlay\n  }, React.createElement(\"div\", {\n    ref: refDialog,\n    className: cx(classes.modal, classNames == null ? void 0 : classNames.modal),\n    style: _extends({\n      animation: modalAnimation + \" \" + animationDuration + \"ms\"\n    }, styles == null ? void 0 : styles.modal),\n    onMouseDown: handleModalEvent,\n    onMouseUp: handleModalEvent,\n    onClick: handleModalEvent,\n    onAnimationEnd: handleAnimationEnd,\n    id: modalId,\n    role: role,\n    \"aria-modal\": \"true\",\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"data-testid\": \"modal\",\n    tabIndex: -1\n  }, focusTrapped && React.createElement(FocusTrap, {\n    container: refDialog,\n    initialFocusRef: initialFocusRef\n  }), children, showCloseIcon && React.createElement(CloseIcon, {\n    classes: classes,\n    classNames: classNames,\n    styles: styles,\n    closeIcon: closeIcon,\n    onClick: onClose,\n    id: closeIconId\n  })))), containerModal) : null;\n});\nexport default Modal;\nexport { Modal };","map":{"version":3,"names":["CloseIcon","_ref","classes","classNames","styles","id","closeIcon","onClick","React","createElement","className","cx","closeButton","style","width","height","viewBox","d","isBrowser","window","candidateSelectors","isHidden","node","offsetParent","getComputedStyle","visibility","getCheckedRadio","nodes","form","i","length","checked","isNotRadioOrTabbableRadio","tagName","type","name","radioScope","ownerDocument","radioSet","querySelectorAll","undefined","getAllTabbingElements","parentElem","currentActiveElement","document","activeElement","tabbableNodes","join","onlyTabbable","disabled","getTabindex","push","tabTrappingKey","event","key","contains","process","env","NODE_ENV","console","warn","target","allTabbingElements","firstFocusableElement","lastFocusableElement","shiftKey","focus","preventDefault","tabindexAttr","parseInt","getAttribute","isNaN","isContentEditable","tabIndex","FocusTrap","container","initialFocusRef","refLastFocus","useRef","useEffect","handleKeyEvent","current","addEventListener","savePreviousFocus","findIndex","selector","_document$activeEleme","matches","requestAnimationFrame","_initialFocusRef$curr","_refLastFocus$current","removeEventListener","modals","modalManager","add","newModal","remove","oldModal","filter","modal","isTopModal","useModalManager","ref","open","useScrollLock","refModal","showPortal","blockScroll","reserveScrollBarGap","oldRef","disableBodyScroll","enableBodyScroll","root","overlay","overlayAnimationIn","overlayAnimationOut","modalContainer","modalContainerCenter","modalAnimationIn","modalAnimationOut","Modal","forwardRef","center","_ref$blockScroll","closeOnEsc","_ref$closeOnEsc","closeOnOverlayClick","_ref$closeOnOverlayCl","showCloseIcon","_ref$showCloseIcon","closeIconId","focusTrapped","_ref$focusTrapped","_ref$initialFocusRef","animationDuration","_ref$animationDuratio","role","_ref$role","ariaDescribedby","ariaLabelledby","containerId","modalId","onClose","onEscKeyDown","onOverlayClick","onAnimationEnd","children","refDialog","useForwardedRef","refShouldClose","refContainer","useState","_useState","setShowPortal","handleOpen","body","appendChild","handleKeydown","handleClose","removeChild","keyCode","handleClickOverlay","handleModalEvent","handleAnimationEnd","containerModal","overlayAnimation","_classNames$overlayAn","_classNames$overlayAn2","modalAnimation","_classNames$modalAnim","_classNames$modalAnim2","ReactDom","createPortal","_extends","animation","onMouseDown","onMouseUp"],"sources":["/Users/nestor/Desktop/ProyectoIntegradorCTD/node_modules/react-responsive-modal/src/CloseIcon.tsx","/Users/nestor/Desktop/ProyectoIntegradorCTD/node_modules/react-responsive-modal/src/utils.ts","/Users/nestor/Desktop/ProyectoIntegradorCTD/node_modules/react-responsive-modal/src/lib/focusTrapJs.ts","/Users/nestor/Desktop/ProyectoIntegradorCTD/node_modules/react-responsive-modal/src/FocusTrap.tsx","/Users/nestor/Desktop/ProyectoIntegradorCTD/node_modules/react-responsive-modal/src/modalManager.ts","/Users/nestor/Desktop/ProyectoIntegradorCTD/node_modules/react-responsive-modal/src/useScrollLock.ts","/Users/nestor/Desktop/ProyectoIntegradorCTD/node_modules/react-responsive-modal/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\ninterface CloseIconProps {\n  id?: string;\n  closeIcon?: React.ReactNode;\n  styles?: {\n    closeButton?: React.CSSProperties;\n    closeIcon?: React.CSSProperties;\n  };\n  classNames?: {\n    closeButton?: string;\n    closeIcon?: string;\n  };\n  classes: {\n    closeButton?: string;\n  };\n  onClick: () => void;\n}\n\nconst CloseIcon = ({\n  classes,\n  classNames,\n  styles,\n  id,\n  closeIcon,\n  onClick,\n}: CloseIconProps) => (\n  <button\n    id={id}\n    className={cx(classes.closeButton, classNames?.closeButton)}\n    style={styles?.closeButton}\n    onClick={onClick}\n    data-testid=\"close-button\"\n  >\n    {closeIcon ? (\n      closeIcon\n    ) : (\n      <svg\n        className={classNames?.closeIcon}\n        style={styles?.closeIcon}\n        width={28}\n        height={28}\n        viewBox=\"0 0 36 36\"\n        data-testid=\"close-icon\"\n      >\n        <path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />\n      </svg>\n    )}\n  </button>\n);\n\nexport default CloseIcon;\n","export const isBrowser = typeof window !== 'undefined';\n","// https://github.com/alexandrzavalii/focus-trap-js/blob/master/src/index.js v1.1.0\n\nexport const candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\n\nfunction isHidden(node: any) {\n  // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,\n  // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.\n  return (\n    node.offsetParent === null || getComputedStyle(node).visibility === 'hidden'\n  );\n}\n\nfunction getCheckedRadio(nodes: any, form: any) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isNotRadioOrTabbableRadio(node: any) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio' || !node.name) {\n    return true;\n  }\n  var radioScope = node.form || node.ownerDocument;\n  var radioSet = radioScope.querySelectorAll(\n    'input[type=\"radio\"][name=\"' + node.name + '\"]'\n  );\n  var checked = getCheckedRadio(radioSet, node.form);\n  return checked === node || (checked === undefined && radioSet[0] === node);\n}\n\nexport function getAllTabbingElements(parentElem: any) {\n  var currentActiveElement = document.activeElement;\n  var tabbableNodes = parentElem.querySelectorAll(candidateSelectors.join(','));\n  var onlyTabbable = [];\n  for (var i = 0; i < tabbableNodes.length; i++) {\n    var node = tabbableNodes[i];\n    if (\n      currentActiveElement === node ||\n      (!node.disabled &&\n        getTabindex(node) > -1 &&\n        !isHidden(node) &&\n        isNotRadioOrTabbableRadio(node))\n    ) {\n      onlyTabbable.push(node);\n    }\n  }\n  return onlyTabbable;\n}\n\nexport function tabTrappingKey(event: any, parentElem: any) {\n  // check if current event keyCode is tab\n  if (!event || event.key !== 'Tab') return;\n\n  if (!parentElem || !parentElem.contains) {\n    if (process && process.env.NODE_ENV === 'development') {\n      console.warn('focus-trap-js: parent element is not defined');\n    }\n    return false;\n  }\n\n  if (!parentElem.contains(event.target)) {\n    return false;\n  }\n\n  var allTabbingElements = getAllTabbingElements(parentElem);\n  var firstFocusableElement = allTabbingElements[0];\n  var lastFocusableElement = allTabbingElements[allTabbingElements.length - 1];\n\n  if (event.shiftKey && event.target === firstFocusableElement) {\n    lastFocusableElement.focus();\n    event.preventDefault();\n    return true;\n  } else if (!event.shiftKey && event.target === lastFocusableElement) {\n    firstFocusableElement.focus();\n    event.preventDefault();\n    return true;\n  }\n  return false;\n}\n\nfunction getTabindex(node: any) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return tabIndex correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction isContentEditable(node: any) {\n  return node.getAttribute('contentEditable');\n}\n","import { useEffect, useRef } from 'react';\nimport { isBrowser } from './utils';\nimport {\n  tabTrappingKey,\n  candidateSelectors,\n  getAllTabbingElements,\n} from './lib/focusTrapJs';\n\ninterface FocusTrapProps {\n  container?: React.RefObject<HTMLElement> | null;\n  initialFocusRef?: React.RefObject<HTMLElement>;\n}\n\nexport const FocusTrap = ({ container, initialFocusRef }: FocusTrapProps) => {\n  const refLastFocus = useRef<HTMLElement | null>();\n  /**\n   * Handle focus lock on the modal\n   */\n  useEffect(() => {\n    const handleKeyEvent = (event: KeyboardEvent) => {\n      if (container?.current) {\n        tabTrappingKey(event, container.current);\n      }\n    };\n\n    if (isBrowser) {\n      document.addEventListener('keydown', handleKeyEvent);\n    }\n    // On mount we focus on the first focusable element in the modal if there is one\n    if (isBrowser && container?.current) {\n      const savePreviousFocus = () => {\n        // First we save the last focused element\n        // only if it's a focusable element\n        if (\n          candidateSelectors.findIndex((selector) =>\n            document.activeElement?.matches(selector)\n          ) !== -1\n        ) {\n          refLastFocus.current = document.activeElement as HTMLElement;\n        }\n      };\n\n      if (initialFocusRef) {\n        savePreviousFocus();\n        // We need to schedule focusing on a next frame - this allows to focus on the modal root\n        requestAnimationFrame(() => {\n          initialFocusRef.current?.focus();\n        });\n      } else {\n        const allTabbingElements = getAllTabbingElements(container.current);\n        if (allTabbingElements[0]) {\n          savePreviousFocus();\n          allTabbingElements[0].focus();\n        }\n      }\n    }\n    return () => {\n      if (isBrowser) {\n        document.removeEventListener('keydown', handleKeyEvent);\n        // On unmount we restore the focus to the last focused element\n        refLastFocus.current?.focus();\n      }\n    };\n  }, [container, initialFocusRef]);\n\n  return null;\n};\n","import { Ref, useEffect } from 'react';\n\nlet modals: Ref<Element>[] = [];\n\n/**\n * Handle the order of the modals.\n * Inspired by the material-ui implementation.\n */\nexport const modalManager = {\n  /**\n   * Register a new modal\n   */\n  add: (newModal: Ref<Element>) => {\n    modals.push(newModal);\n  },\n\n  /**\n   * Remove a modal\n   */\n  remove: (oldModal: Ref<Element>) => {\n    modals = modals.filter((modal) => modal !== oldModal);\n  },\n\n  /**\n   * When multiple modals are rendered will return true if current modal is the last one\n   */\n  isTopModal: (modal: Ref<Element>) =>\n    !!modals.length && modals[modals.length - 1] === modal,\n};\n\nexport function useModalManager(ref: Ref<Element>, open: boolean) {\n  useEffect(() => {\n    if (open) {\n      modalManager.add(ref);\n    }\n    return () => {\n      modalManager.remove(ref);\n    };\n  }, [open, ref]);\n}\n","import { useEffect, useRef } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nexport const useScrollLock = (\n  refModal: React.RefObject<Element>,\n  open: boolean,\n  showPortal: boolean,\n  blockScroll: boolean,\n  reserveScrollBarGap?: boolean\n) => {\n  const oldRef = useRef<Element | null>(null);\n\n  useEffect(() => {\n    if (open && refModal.current && blockScroll) {\n      oldRef.current = refModal.current;\n      disableBodyScroll(refModal.current, { reserveScrollBarGap });\n    }\n    return () => {\n      if (oldRef.current) {\n        enableBodyScroll(oldRef.current);\n        oldRef.current = null;\n      }\n    };\n  }, [open, showPortal, refModal, blockScroll, reserveScrollBarGap]);\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDom from 'react-dom';\nimport cx from 'classnames';\nimport CloseIcon from './CloseIcon';\nimport { FocusTrap } from './FocusTrap';\nimport { modalManager, useModalManager } from './modalManager';\nimport { useScrollLock } from './useScrollLock';\nimport { isBrowser } from './utils';\nimport useForwardedRef from '@bedrock-layout/use-forwarded-ref';\n\nconst classes = {\n  root: 'react-responsive-modal-root',\n  overlay: 'react-responsive-modal-overlay',\n  overlayAnimationIn: 'react-responsive-modal-overlay-in',\n  overlayAnimationOut: 'react-responsive-modal-overlay-out',\n  modalContainer: 'react-responsive-modal-container',\n  modalContainerCenter: 'react-responsive-modal-containerCenter',\n  modal: 'react-responsive-modal-modal',\n  modalAnimationIn: 'react-responsive-modal-modal-in',\n  modalAnimationOut: 'react-responsive-modal-modal-out',\n  closeButton: 'react-responsive-modal-closeButton',\n};\n\nexport interface ModalProps {\n  /**\n   * Control if the modal is open or not.\n   */\n  open: boolean;\n  /**\n   * Should the dialog be centered.\n   *\n   * Default to false.\n   */\n  center?: boolean;\n  /**\n   * Is the modal closable when user press esc key.\n   *\n   * Default to true.\n   */\n  closeOnEsc?: boolean;\n  /**\n   * Is the modal closable when user click on overlay.\n   *\n   * Default to true.\n   */\n  closeOnOverlayClick?: boolean;\n  /**\n   * Whether to block scrolling when dialog is open.\n   *\n   * Default to true.\n   */\n  blockScroll?: boolean;\n  /**\n   * Show the close icon.\n   *\n   * Default to true.\n   */\n  showCloseIcon?: boolean;\n  /**\n   * id attribute for the close icon button.\n   */\n  closeIconId?: string;\n  /**\n   * Custom icon to render (svg, img, etc...).\n   */\n  closeIcon?: React.ReactNode;\n  /**\n   * When the modal is open, trap focus within it.\n   *\n   * Default to true.\n   */\n  focusTrapped?: boolean;\n  /**\n   * Element to focus when focus trap is used.\n   *\n   * Default to undefined.\n   */\n  initialFocusRef?: React.RefObject<HTMLElement>;\n  /**\n   * You can specify a container prop which should be of type `Element`.\n   * The portal will be rendered inside that element.\n   * The default behavior will create a div node and render it at the at the end of document.body.\n   */\n  container?: Element | null;\n  /**\n   * An object containing classNames to style the modal.\n   */\n  classNames?: {\n    root?: string;\n    overlay?: string;\n    overlayAnimationIn?: string;\n    overlayAnimationOut?: string;\n    modalContainer?: string;\n    modal?: string;\n    modalAnimationIn?: string;\n    modalAnimationOut?: string;\n    closeButton?: string;\n    closeIcon?: string;\n  };\n  /**\n   * An object containing the styles objects to style the modal.\n   */\n  styles?: {\n    root?: React.CSSProperties;\n    overlay?: React.CSSProperties;\n    modalContainer?: React.CSSProperties;\n    modal?: React.CSSProperties;\n    closeButton?: React.CSSProperties;\n    closeIcon?: React.CSSProperties;\n  };\n  /**\n   * Animation duration in milliseconds.\n   *\n   * Default to 300.\n   */\n  animationDuration?: number;\n  /**\n   * ARIA role for modal\n   *\n   * Default to 'dialog'.\n   */\n  role?: string;\n  /**\n   * ARIA label for modal\n   */\n  ariaLabelledby?: string;\n  /**\n   * ARIA description for modal\n   */\n  ariaDescribedby?: string;\n  /**\n   * Avoid unpleasant flickering effect when body overflow is hidden. For more information see https://www.npmjs.com/package/body-scroll-lock\n   */\n  reserveScrollBarGap?: boolean;\n  /**\n   * id attribute for modal container\n   */\n  containerId?: string;\n  /**\n   * id attribute for modal\n   */\n  modalId?: string;\n  /**\n   * Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.\n   */\n  onClose: () => void;\n  /**\n   * Callback fired when the escape key is pressed.\n   */\n  onEscKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Callback fired when the overlay is clicked.\n   */\n  onOverlayClick?: (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => void;\n  /**\n   * Callback fired when the Modal has exited and the animation is finished.\n   */\n  onAnimationEnd?: () => void;\n  children?: React.ReactNode;\n}\n\nexport const Modal = React.forwardRef(\n  (\n    {\n      open,\n      center,\n      blockScroll = true,\n      closeOnEsc = true,\n      closeOnOverlayClick = true,\n      container,\n      showCloseIcon = true,\n      closeIconId,\n      closeIcon,\n      focusTrapped = true,\n      initialFocusRef = undefined,\n      animationDuration = 300,\n      classNames,\n      styles,\n      role = 'dialog',\n      ariaDescribedby,\n      ariaLabelledby,\n      containerId,\n      modalId,\n      onClose,\n      onEscKeyDown,\n      onOverlayClick,\n      onAnimationEnd,\n      children,\n      reserveScrollBarGap,\n    }: ModalProps,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const refDialog = useForwardedRef(ref);\n    const refModal = useRef<HTMLDivElement>(null);\n    const refShouldClose = useRef<boolean | null>(null);\n    const refContainer = useRef<HTMLDivElement | null>(null);\n    // Lazily create the ref instance\n    // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n    if (refContainer.current === null && isBrowser) {\n      refContainer.current = document.createElement('div');\n    }\n\n    // The value should be false for srr, that way when the component is hydrated client side,\n    // it will match the server rendered content\n    const [showPortal, setShowPortal] = useState(false);\n\n    // Hook used to manage multiple modals opened at the same time\n    useModalManager(refModal, open);\n\n    // Hook used to manage the scroll\n    useScrollLock(refModal, open, showPortal, blockScroll, reserveScrollBarGap);\n\n    const handleOpen = () => {\n      if (\n        refContainer.current &&\n        !container &&\n        !document.body.contains(refContainer.current)\n      ) {\n        document.body.appendChild(refContainer.current);\n      }\n\n      document.addEventListener('keydown', handleKeydown);\n    };\n\n    const handleClose = () => {\n      if (\n        refContainer.current &&\n        !container &&\n        document.body.contains(refContainer.current)\n      ) {\n        document.body.removeChild(refContainer.current);\n      }\n      document.removeEventListener('keydown', handleKeydown);\n    };\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      // Only the last modal need to be escaped when pressing the esc key\n      if (event.keyCode !== 27 || !modalManager.isTopModal(refModal)) {\n        return;\n      }\n\n      onEscKeyDown?.(event);\n\n      if (closeOnEsc) {\n        onClose();\n      }\n    };\n\n    useEffect(() => {\n      return () => {\n        if (showPortal) {\n          // When the modal is closed or removed directly, cleanup the listeners\n          handleClose();\n        }\n      };\n    }, [showPortal]);\n\n    useEffect(() => {\n      // If the open prop is changing, we need to open the modal\n      // This is also called on the first render if the open prop is true when the modal is created\n      if (open && !showPortal) {\n        setShowPortal(true);\n        handleOpen();\n      }\n    }, [open]);\n\n    const handleClickOverlay = (\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      if (refShouldClose.current === null) {\n        refShouldClose.current = true;\n      }\n\n      if (!refShouldClose.current) {\n        refShouldClose.current = null;\n        return;\n      }\n\n      onOverlayClick?.(event);\n\n      if (closeOnOverlayClick) {\n        onClose();\n      }\n\n      refShouldClose.current = null;\n    };\n\n    const handleModalEvent = () => {\n      refShouldClose.current = false;\n    };\n\n    const handleAnimationEnd = () => {\n      if (!open) {\n        setShowPortal(false);\n      }\n\n      onAnimationEnd?.();\n    };\n\n    const containerModal = container || refContainer.current;\n\n    const overlayAnimation = open\n      ? classNames?.overlayAnimationIn ?? classes.overlayAnimationIn\n      : classNames?.overlayAnimationOut ?? classes.overlayAnimationOut;\n\n    const modalAnimation = open\n      ? classNames?.modalAnimationIn ?? classes.modalAnimationIn\n      : classNames?.modalAnimationOut ?? classes.modalAnimationOut;\n\n    return showPortal && containerModal\n      ? ReactDom.createPortal(\n          <div\n            className={cx(classes.root, classNames?.root)}\n            style={styles?.root}\n            data-testid=\"root\"\n          >\n            <div\n              className={cx(classes.overlay, classNames?.overlay)}\n              data-testid=\"overlay\"\n              aria-hidden={true}\n              style={{\n                animation: `${overlayAnimation} ${animationDuration}ms`,\n                ...styles?.overlay,\n              }}\n            />\n            <div\n              ref={refModal}\n              id={containerId}\n              className={cx(\n                classes.modalContainer,\n                center && classes.modalContainerCenter,\n                classNames?.modalContainer\n              )}\n              style={styles?.modalContainer}\n              data-testid=\"modal-container\"\n              onClick={handleClickOverlay}\n            >\n              <div\n                ref={refDialog}\n                className={cx(classes.modal, classNames?.modal)}\n                style={{\n                  animation: `${modalAnimation} ${animationDuration}ms`,\n                  ...styles?.modal,\n                }}\n                onMouseDown={handleModalEvent}\n                onMouseUp={handleModalEvent}\n                onClick={handleModalEvent}\n                onAnimationEnd={handleAnimationEnd}\n                id={modalId}\n                role={role}\n                aria-modal=\"true\"\n                aria-labelledby={ariaLabelledby}\n                aria-describedby={ariaDescribedby}\n                data-testid=\"modal\"\n                tabIndex={-1}\n              >\n                {focusTrapped && (\n                  <FocusTrap\n                    container={refDialog}\n                    initialFocusRef={initialFocusRef}\n                  />\n                )}\n                {children}\n                {showCloseIcon && (\n                  <CloseIcon\n                    classes={classes}\n                    classNames={classNames}\n                    styles={styles}\n                    closeIcon={closeIcon}\n                    onClick={onClose}\n                    id={closeIconId}\n                  />\n                )}\n              </div>\n            </div>\n          </div>,\n          containerModal\n        )\n      : null;\n  }\n);\n\nexport default Modal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}