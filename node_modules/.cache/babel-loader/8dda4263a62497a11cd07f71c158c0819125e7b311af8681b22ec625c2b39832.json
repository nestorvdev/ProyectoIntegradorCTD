{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@mui/utils';\nexport default function mergeClasses() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    baseClasses,\n    newClasses,\n    Component\n  } = options;\n  if (!newClasses) {\n    return baseClasses;\n  }\n  const nextClasses = _extends({}, baseClasses);\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([\"MUI: The value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n  Object.keys(newClasses).forEach(key => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([\"MUI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n'));\n      }\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([\"MUI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n'));\n      }\n    }\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}","map":{"version":3,"names":["_extends","getDisplayName","mergeClasses","options","arguments","length","undefined","baseClasses","newClasses","Component","nextClasses","process","env","NODE_ENV","console","error","concat","join","Object","keys","forEach","key"],"sources":["/Users/nestor/Desktop/ProyectoIntegradorCTD/node_modules/@mui/styles/mergeClasses/mergeClasses.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@mui/utils';\nexport default function mergeClasses(options = {}) {\n  const {\n    baseClasses,\n    newClasses,\n    Component\n  } = options;\n  if (!newClasses) {\n    return baseClasses;\n  }\n  const nextClasses = _extends({}, baseClasses);\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([`MUI: The value \\`${newClasses}\\` ` + `provided to the classes prop of ${getDisplayName(Component)} is incorrect.`, 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n  Object.keys(newClasses).forEach(key => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([`MUI: The key \\`${key}\\` ` + `provided to the classes prop is not implemented in ${getDisplayName(Component)}.`, `You can only override one of the following: ${Object.keys(baseClasses).join(',')}.`].join('\\n'));\n      }\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([`MUI: The key \\`${key}\\` ` + `provided to the classes prop is not valid for ${getDisplayName(Component)}.`, `You need to provide a non empty string instead of: ${newClasses[key]}.`].join('\\n'));\n      }\n    }\n    if (newClasses[key]) {\n      nextClasses[key] = `${baseClasses[key]} ${newClasses[key]}`;\n    }\n  });\n  return nextClasses;\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,cAAc,QAAQ,YAAY;AAC3C,eAAe,SAASC,YAAYA,CAAA,EAAe;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC/C,MAAM;IACJG,WAAW;IACXC,UAAU;IACVC;EACF,CAAC,GAAGN,OAAO;EACX,IAAI,CAACK,UAAU,EAAE;IACf,OAAOD,WAAW;EACpB;EACA,MAAMG,WAAW,GAAGV,QAAQ,CAAC,CAAC,CAAC,EAAEO,WAAW,CAAC;EAC7C,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,OAAOL,UAAU,KAAK,QAAQ,EAAE;MAClCM,OAAO,CAACC,KAAK,CAAC,CAAC,mBAAAC,MAAA,CAAoBR,UAAU,6CAAAQ,MAAA,CAA2Cf,cAAc,CAACQ,SAAS,CAAC,mBAAgB,EAAE,mDAAmD,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;MACnM,OAAOV,WAAW;IACpB;EACF;EACAW,MAAM,CAACC,IAAI,CAACX,UAAU,CAAC,CAACY,OAAO,CAACC,GAAG,IAAI;IACrC,IAAIV,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAI,CAACN,WAAW,CAACc,GAAG,CAAC,IAAIb,UAAU,CAACa,GAAG,CAAC,EAAE;QACxCP,OAAO,CAACC,KAAK,CAAC,CAAC,iBAAAC,MAAA,CAAkBK,GAAG,gEAAAL,MAAA,CAA8Df,cAAc,CAACQ,SAAS,CAAC,MAAG,iDAAAO,MAAA,CAAiDE,MAAM,CAACC,IAAI,CAACZ,WAAW,CAAC,CAACU,IAAI,CAAC,GAAG,CAAC,OAAI,CAACA,IAAI,CAAC,IAAI,CAAC,CAAC;MACnO;MACA,IAAIT,UAAU,CAACa,GAAG,CAAC,IAAI,OAAOb,UAAU,CAACa,GAAG,CAAC,KAAK,QAAQ,EAAE;QAC1DP,OAAO,CAACC,KAAK,CAAC,CAAC,iBAAAC,MAAA,CAAkBK,GAAG,2DAAAL,MAAA,CAAyDf,cAAc,CAACQ,SAAS,CAAC,MAAG,wDAAAO,MAAA,CAAwDR,UAAU,CAACa,GAAG,CAAC,OAAI,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAC;MAClN;IACF;IACA,IAAIT,UAAU,CAACa,GAAG,CAAC,EAAE;MACnBX,WAAW,CAACW,GAAG,CAAC,MAAAL,MAAA,CAAMT,WAAW,CAACc,GAAG,CAAC,OAAAL,MAAA,CAAIR,UAAU,CAACa,GAAG,CAAC,CAAE;IAC7D;EACF,CAAC,CAAC;EACF,OAAOX,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}