// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Probando el componente <ConfirmProductModal/> Deberia mostrar <ConfirmProductModal/> correctamente 1`] = `
<div
  className="containerCreateModal"
>
  <div
    className="question"
  >
    ?
  </div>
  <p>
    ¿Está seguro que desea 
    ?
  </p>
  <button
    className="ok"
  >
    Ok
  </button>
  <button
    className="cancel"
  >
    Cancelar
  </button>
</div>
`;

exports[`Probando el componente <CreateProduct/> Deberia mostrar <CreateProduct/> correctamente 1`] = `
<section>
  <Spinner />
</section>
`;

exports[`Probando el componente <FormProductCreate/> Deberia mostrar <FormProductCreate/> correctamente 1`] = `
<section
  className="delimiter containerPrincipal"
>
  <div
    className="delimiterChild containerForm"
  >
    <FormProduct
      address=""
      cancellationPolicy=""
      description=""
      enviarDatos={[Function]}
      errorCamposVacios=""
      healthAndSecurity=""
      images={Array []}
      modalExistedProductIsOpen={false}
      modalExpiredLoginIsOpen={false}
      name=""
      qualification={
        Object {
          "campo": "",
          "error": "",
          "valido": false,
        }
      }
      reference=""
      rules=""
      selectedFeatures={Array []}
      setAddress={[Function]}
      setCancellationPolicy={[Function]}
      setDescription={[Function]}
      setHealthAndSecurity={[Function]}
      setImageTitle={[Function]}
      setImageUrl={[Function]}
      setImages={[Function]}
      setLatitude={[Function]}
      setLongitude={[Function]}
      setModalExistedProductIsOpen={[Function]}
      setModalExpiredLoginIsOpen={[Function]}
      setModalProductSucceedIsOpen={[Function]}
      setName={[Function]}
      setQualification={[Function]}
      setReference={[Function]}
      setRules={[Function]}
      setSelectedCategory={[Function]}
      setSelectedCity={[Function]}
      setSelectedFeatures={[Function]}
      tituloBoton="Crear"
    />
    <ForwardRef
      center={true}
      onClose={[Function]}
      open={false}
    >
      <ConfirmProductModal
        accion="crear el producto"
        closeModalConfirm={[Function]}
        funcionProducto={[Function]}
        setModalConfirmIsOpen={[Function]}
      />
    </ForwardRef>
    <ForwardRef
      center={true}
      onClose={[Function]}
      open={false}
    >
      <ProductModalSucceed
        closeModal={[Function]}
        icon="tildeOk.svg"
      />
    </ForwardRef>
  </div>
</section>
`;

exports[`Probando el componente <FormProductUpdate/> Deberia mostrar <FormProductUpdate/> correctamente 1`] = `
<section
  className="delimiter containerPrincipal"
>
  <div
    className="delimiterChild containerForm"
  >
    <FormProduct
      address=""
      cancellationPolicy=""
      description=""
      enviarDatos={[Function]}
      errorCamposVacios=""
      healthAndSecurity=""
      images={Array []}
      modalExpiredLoginIsOpen={false}
      name=""
      qualification={
        Object {
          "campo": "",
          "error": "",
          "valido": false,
        }
      }
      rules=""
      selectedCategory={
        Object {
          "id": "",
          "name": "",
        }
      }
      selectedCity={
        Object {
          "id": "",
          "name": "",
        }
      }
      selectedFeatures={Array []}
      setAddress={[Function]}
      setCancellationPolicy={[Function]}
      setDescription={[Function]}
      setHealthAndSecurity={[Function]}
      setImageTitle={[Function]}
      setImageUrl={[Function]}
      setImages={[Function]}
      setLatitude={[Function]}
      setLongitude={[Function]}
      setModalExpiredLoginIsOpen={[Function]}
      setModalProductSucceedIsOpen={[Function]}
      setName={[Function]}
      setQualification={[Function]}
      setReference={[Function]}
      setRules={[Function]}
      setSelectedCategory={[Function]}
      setSelectedCity={[Function]}
      setSelectedFeatures={[Function]}
      tituloBoton="Modificar"
    />
    <ForwardRef
      center={true}
      onClose={[Function]}
      open={false}
    >
      <ConfirmProductModal
        accion="modificar el producto"
        closeModalConfirm={[Function]}
        funcionProducto={[Function]}
        setModalConfirmIsOpen={[Function]}
      />
    </ForwardRef>
    <ForwardRef
      center={true}
      onClose={[Function]}
      open={false}
    >
      <ProductModalSucceed
        closeModal={[Function]}
        icon="tildeOk.svg"
      />
    </ForwardRef>
  </div>
</section>
`;

exports[`Probando el componente <ModalProductSucceed/> Deberia mostrar <ModalProductSucceed/> correctamente 1`] = `
<div
  className="containerCreateModal"
>
  <div
    className={null}
  >
     
    <img
      alt="icon"
    />
  </div>
  <h3 />
  <p />
  <button>
    Ok
  </button>
</div>
`;

exports[`Probando el componente <ProductSelect/> Deberia mostrar <ProductSelect/> correctamente 1`] = `
<section
  className="delimiter containerPrincipal"
>
  <div
    className="delimiterChild containerForm containerProductSelect"
  >
    <p
      className="titleProductSelect"
    >
      Seleccione el nombre del producto para modificar
    </p>
    <div
      className="selectProductBox"
    >
      <ForwardRef
        isSearchable={true}
        onChange={[Function]}
        options={Array []}
        placeholder="Seleccionar producto"
        styles={
          Object {
            "control": [Function],
            "dropdownIndicator": [Function],
            "indicatorsContainer": [Function],
            "input": [Function],
            "option": [Function],
            "placeholder": [Function],
            "singleValue": [Function],
            "valueContainer": [Function],
          }
        }
      />
      <button
        className="buttonSearchProduct button"
        onClick={[Function]}
      >
        Buscar
      </button>
    </div>
  </div>
</section>
`;

exports[`Probando el componente <UpdateSelect/> Deberia mostrar <UpdateSelect/> correctamente 1`] = `
<section>
  <Spinner />
</section>
`;
